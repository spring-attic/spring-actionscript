<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="https://www.adobe.com/2006/mxml"
		 width="100%"
		 horizontalAlign="center">

	<mx:Metadata>
		[RouteEvents]
		[Event(name="logout")]
	</mx:Metadata>

	<mx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;

			import org.springextensions.actionscript.samples.cafetownsend.application.ApplicationEvents;
			import org.springextensions.actionscript.samples.cafetownsend.domain.Employee;
			import org.springextensions.actionscript.util.Environment;

			// --------------------------------------------------------------------
			//
			// Private Variables
			//
			// --------------------------------------------------------------------

			private var _detailsWindow:EmployeeDetail;

			// --------------------------------------------------------------------
			//
			// Public Properties
			//
			// --------------------------------------------------------------------

			// ----------------------------
			// presentationModel
			// ----------------------------

			private var m_presentationModel:EmployeeListPresentationModel;

			[Inject]
			[Bindable(event="presentationModelChange")]
			public function get presentationModel():EmployeeListPresentationModel {
				return m_presentationModel;
			}

			public function set presentationModel(value:EmployeeListPresentationModel):void {
				if (value !== m_presentationModel) {
					m_presentationModel = value;

					if (m_presentationModel) {
						BindingUtils.bindSetter(presentationModel_setEmployeeDetailsPresentationModel, presentationModel, "employeeDetailsPresentationModel");
					}

					dispatchEvent(new Event("presentationModelChange"));
				}
			}

			// --------------------------------------------------------------------
			//
			// Private Methods
			//
			// --------------------------------------------------------------------

			private function presentationModel_setEmployeeDetailsPresentationModel(employeeDetailsPM:EmployeeDetailPresentationModel):void {
				if (employeeDetailsPM) {
					_detailsWindow = new EmployeeDetail();
					_detailsWindow.presentationModel = employeeDetailsPM;
					PopUpManager.addPopUp(_detailsWindow, Environment.getCurrentApplication() as DisplayObject, true);
					PopUpManager.centerPopUp(_detailsWindow);
				} else {
					PopUpManager.removePopUp(_detailsWindow);
					_detailsWindow = null;
				}
			}

			private function addButton_clickHandler(event:Event):void {
				presentationModel.addEmployee();
			}

			private function editButton_clickHandler(event:Event):void {
				presentationModel.editSelectedEmployee();
			}

			private function deleteButton_clickHandler(event:MouseEvent):void {
				Alert.show("Are you sure you want to delete the selected employee?", "Delete Employee", Alert.YES | Alert.NO, null, deleteAlert_closeHandler);
			}

			private function deleteAlert_closeHandler(event:CloseEvent):void {
				if (event.detail == Alert.YES) {
					presentationModel.deleteSelectedEmployee();
				}
			}

			private function employeeList_changeHandler(event:Event):void {
				presentationModel.selectedEmployee = Employee(employeeList.selectedItem);
			}

			// format the names that are displayed in the List
			public function properName(dpItem:Object):String {
				return dpItem.lastname + ", " + dpItem.firstname;
			}

			private function logoutButton_clickHandler(event:Event):void {
				dispatchEvent(new Event(ApplicationEvents.LOGOUT));
			}

			private function employeeList_doubleClickHandler(event:MouseEvent):void {
				presentationModel.editSelectedEmployee();
			}
		]]>
	</mx:Script>

	<mx:Panel title="Employee List"
			  horizontalCenter="0"
			  width="100%">
		<mx:HBox paddingTop="10"
				 width="100%">
			<mx:Button id="addButton"
					   label="Add New Employee"
					   click="addButton_clickHandler(event)"/>
			<mx:VRule height="20"/>
			<mx:Button id="editButton"
					   label="Edit"
					   enabled="{presentationModel.editAllowed}"
					   click="editButton_clickHandler(event)"/>
			<mx:Button id="deleteButton"
					   label="Delete"
					   enabled="{presentationModel.deleteAllowed}"
					   click="deleteButton_clickHandler(event)"/>
			<mx:Spacer width="100%"/>
			<mx:Button id="logoutButton"
					   label="Logout"
					   click="logoutButton_clickHandler(event)"/>
		</mx:HBox>

		<mx:List id="employeeList"
				 width="100%"
				 dataProvider="{presentationModel.employees}"
				 labelFunction="properName"
				 change="employeeList_changeHandler(event)"
				 doubleClickEnabled="true"
				 doubleClick="employeeList_doubleClickHandler(event)"
				 verticalScrollPolicy="auto"/>
	</mx:Panel>

</mx:VBox>
